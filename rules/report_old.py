# 生成报告

rule report:
    input:
        metadata = config["metadata"],
        diff_lst = config["diff_lst"],
        experiment1 = workflow.basedir + "/images/experiment_flow1.png",
        experiment2 = workflow.basedir +"/images/experiment_flow2.png",
        analysis = workflow.basedir +"/images/analysis_flow2.png",
        igv = workflow.basedir +"/images/igv.png",
        fastp_stats = clean_data_dir + "/fastp/fastp_stats.xls",
        derRNA_stats = clean_data_dir + "/derRNA_stats.xls",
        hisat2_stats = align_dir + "/hisat2/hisat2_stats.xls",
        read_distribution_plot = expand(align_dir + "/QC/read_distribution/{sample}.read_distribution_plot.png", sample=samples),
        junctionSaturation_plot = expand(align_dir + "/QC/junctionSaturation/{sample}.junctionSaturation_plot.png", sample=samples),
        geneBodyCoverage = expand(align_dir + "/QC/geneBody_coverage/{sample}.geneBodyCoverage.curves.png", sample=samples),
        read_duplication = expand(align_dir + "/QC/read_duplication/{sample}.DupRate_plot.png", sample=samples),
        new_trans = new_trans_dir + "/new_trans.gtf",
        gene_fpkm = exp_dir + "/gene_fpkm_all_samples_anno.txt",
        exp_boxplot = expand(exp_dir + "/boxplot/fpkm_{group}.png", group=config["groups"]+["SampleID"]),
        exp_density = expand(exp_dir + "/density/fpkm_{group}.png", group=config["groups"]+["SampleID"]),
        exp_pca = expand(exp_dir + "/PCA/fpkm_{group}_pca_label.png", group=config["groups"]),
        exp_correlation = exp_dir + "/correlation/fpkm_corr.png",
        deg = expand(diff_dir + "/{level}/{method}/{contrast}/{contrast}_diff.xls", level=diff_levels, contrast=contrasts, method=diff_methods),
        DEGs_venn_or_flower = expand(diff_dir + "/{level}/{method}/DEGs_venn_or_flower.png",level=diff_levels, method=diff_methods),
        deg_ma = expand(diff_dir + "/{level}/{method}/{contrast}/{contrast}_MA.png", level=diff_levels, contrast=contrasts, method=diff_methods),
        deg_volcano = expand(diff_dir + "/{level}/{method}/{contrast}/{contrast}_Volcano.png", level=diff_levels, contrast=contrasts, method=diff_methods),
        deg_heatmap = expand(diff_dir + "/{level}/{method}/{contrast}/{contrast}_heatmap.png", level=diff_levels, contrast=contrasts, method=diff_methods),
        deg_go = expand(diff_dir + "/{level}/{method}/{contrast}/go_enrich/go_enrich_{label}.xls", level=diff_levels, contrast=contrasts, method=diff_methods, label=deg_labels),
        go_barplot = expand(diff_dir + "/{level}/{method}/{contrast}/go_enrich/barplot_{label}.png",level=diff_levels, contrast=contrasts, method=diff_methods, label=deg_labels),
        go_dotplot = expand(diff_dir + "/{level}/{method}/{contrast}/go_enrich/dotplot_{label}.png",level=diff_levels, contrast=contrasts, method=diff_methods, label=deg_labels),
        bp_dagplot = expand(diff_dir+"/{level}/{method}/{contrast}/go_enrich/DAG/{label}/DAGplot_BP.png",level=diff_levels, contrast=contrasts, method=diff_methods, label=deg_labels),
        cc_dagplot = expand(diff_dir+"/{level}/{method}/{contrast}/go_enrich/DAG/{label}/DAGplot_CC.png",level=diff_levels, contrast=contrasts, method=diff_methods, label=deg_labels),
        mf_dagplot = expand(diff_dir+"/{level}/{method}/{contrast}/go_enrich/DAG/{label}/DAGplot_MF.png",level=diff_levels, contrast=contrasts, method=diff_methods, label=deg_labels),
        deg_kegg = expand(diff_dir + "/{level}/{method}/{contrast}/kegg_enrich/kegg_enrich_{label}.xls", level=diff_levels, contrast=contrasts, method=diff_methods, label=deg_labels),
        kegg_barplot = expand(diff_dir + "/{level}/{method}/{contrast}/kegg_enrich/barplot_{label}.png",level=diff_levels, contrast=contrasts, method=diff_methods, label=deg_labels),
        kegg_dotplot = expand(diff_dir + "/{level}/{method}/{contrast}/kegg_enrich/dotplot_{label}.png",level=diff_levels, contrast=contrasts, method=diff_methods, label=deg_labels),
        kegg_map_example = workflow.basedir +"/images/kegg_map_example.png",
        weblink_anno = expand(diff_dir + "/{level}/{method}/{contrast}/kegg_enrich/kegg_enrich_{type}.xls", level=diff_levels, contrast=contrasts, method=diff_methods, type=types),
        as_envent = workflow.basedir +"/images/as_envent.png",
        as_exon_skip_isoform = workflow.basedir +"/images/as_se.png",
        as_envent_exon_inclusion_level = workflow.basedir +"/images/as_envent_exon_inclusion_level.png",
        rmats_res = expand(as_dir + "/{contrast}/results", contrast=contrasts),
    params:
        experiment1 = lambda wildcards, input: os.path.abspath(input.experiment1),
        experiment2 = lambda wildcards, input: os.path.abspath(input.experiment2),
        analysis = lambda wildcards, input: os.path.abspath(input.analysis),
        igv = lambda wildcards, input: os.path.abspath(input.igv),
        junctionSaturation_plot = lambda wildcards, input: list(map(os.path.abspath, input.junctionSaturation_plot)),
        geneBodyCoverage = lambda wildcards, input: list(map(os.path.abspath, input.geneBodyCoverage)),
        read_duplication = lambda wildcards, input: list(map(os.path.abspath, input.read_duplication)),
        exp_boxplot = lambda wildcards, input: list(map(os.path.abspath, input.exp_boxplot)),
        exp_density = lambda wildcards, input: list(map(os.path.abspath, input.exp_density)),
        exp_pca = lambda wildcards, input: list(map(os.path.abspath, input.exp_pca)),
        exp_correlation = lambda wildcards, input: os.path.abspath(input.exp_correlation),
        deg_ma = lambda wildcards, input: list(map(os.path.abspath, input.deg_ma)),
        deg_volcano = lambda wildcards, input: list(map(os.path.abspath, input.deg_volcano)),
        deg_heatmap = lambda wildcards, input: list(map(os.path.abspath, input.deg_heatmap)),
        go_barplot = lambda wildcards, input: list(map(os.path.abspath, input.go_barplot)),
        go_dotplot = lambda wildcards, input: list(map(os.path.abspath, input.go_dotplot)),
        bp_dagplot = lambda wildcards, input: list(map(os.path.abspath, input.bp_dagplot)),
        cc_dagplot = lambda wildcards, input: list(map(os.path.abspath, input.cc_dagplot)),
        mf_dagplot = lambda wildcards, input: list(map(os.path.abspath, input.mf_dagplot)),
        kegg_barplot = lambda wildcards, input: list(map(os.path.abspath, input.kegg_barplot)),
        kegg_dotplot = lambda wildcards, input: list(map(os.path.abspath, input.kegg_dotplot)),
        kegg_map_example = lambda wildcards, input: os.path.abspath(input.kegg_map_example),
        as_envent = lambda wildcards, input: os.path.abspath(input.as_envent),
        as_exon_skip_isoform = lambda wildcards, input: os.path.abspath(input.as_exon_skip_isoform),
        as_envent_exon_inclusion_level = lambda wildcards, input: os.path.abspath(input.as_envent_exon_inclusion_level),
    output:
        "mRNA_report.html"
    script:
        "../scripts/report/U_mRNA_report.Rmd"